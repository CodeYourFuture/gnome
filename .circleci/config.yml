version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set env variables
          command: echo 'export VERSION=$(echo $CIRCLE_SHA1 | cut -c -7)' >> $BASH_ENV
      - run:
          name: Run API tests
          #command: cd api && yarn test
          command: echo "we should be running some api tests here!" 
      - run:
          name: Run Web tests
          #command: cd web && yarn test
          command: echo "we should be running some web tests here!" 
      - run:
          name: Build humankind-web image
          command: echo "$VERSION" > ./web/public/version.txt; docker build -t $DOCKER_USER/humankind-web:$VERSION --build-arg version=$VERSION ./web/ && docker tag $DOCKER_USER/humankind-web:$VERSION $DOCKER_USER/humankind-web:latest
      - run:
          name: Build humankind-api image
          command: docker build -t $DOCKER_USER/humankind-api:$VERSION --build-arg version=$VERSION ./api/ && docker tag $DOCKER_USER/humankind-api:$VERSION $DOCKER_USER/humankind-api:latest
      - run:
          name: Docker login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Docker push humankind-api image
          command: docker push $DOCKER_USER/humankind-api
      - run:
          name: Docker push humankind-web image
          command: docker push $DOCKER_USER/humankind-web

  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    working_directory: ~/repo
    steps:
      - setup_remote_docker
      - run:
          name: Set env variables
          command: echo 'export VERSION=$(echo $CIRCLE_SHA1 | cut -c -7)' >> $BASH_ENV
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Install kubectl
          command: curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl
      - run:
          name: Install gnupg
          command: sudo apt-get -y install gnupg
      - run:
          name: Get kubeconfig
          command: aws s3 cp s3://$SECRETS_BUCKET/kubectl/config_cyfbot.gpg ./config.gpg
      - run:
          name: Decrypt kubeconfig and set KUBECONFIG
          command: gpg --yes --passphrase="$GPG_KEY" config.gpg
      - run:
          name: Update backend k8s deployment
          command: KUBECONFIG=$(pwd)/config ./kubectl set image deployment/humankind-dep-api humankind-api=codeyourfuture/humankind-api:$VERSION
      - run:
          name: Update frontend k8s deployment
          command: KUBECONFIG=$(pwd)/config ./kubectl set image deployment/humankind-dep-web humankind-web=codeyourfuture/humankind-web:$VERSION

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          context: build    
      - deploy:
          context: deployments
          requires:
            - build
          filters:
            branches:
              only: master 
